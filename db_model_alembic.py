# Vi importerar n√∂dv√§ndiga moduler fr√•n SQLAlchemy
from sqlalchemy import Column, Integer, String, Text, Boolean, ForeignKey, TIMESTAMP
from sqlalchemy.orm import declarative_base

# Vi definierar en basklass f√∂r v√•ra modeller ‚Äì alla tabeller kommer att √§rva fr√•n denna
Base = declarative_base()

# -------------------------------
# TABELL: banks
# -------------------------------
class Bank(Base):
    __tablename__ = "banks"  # Namn p√• tabellen i databasen

    id = Column(Integer, primary_key=True)  # Unik ID f√∂r varje bank (auto-increment)
    name = Column(Text, nullable=False)     # Bankens namn ‚Äì f√•r inte vara tomt
    banknr = Column(Text, nullable=False, unique=True)  # Bankens registreringsnummer ‚Äì m√•ste vara unikt

# -------------------------------
# TABELL: customers (kunder)
# -------------------------------
class Customer(Base):
    __tablename__ = "customers"

    id = Column(Integer, primary_key=True)  # Unik ID f√∂r varje kund
    name = Column(Text, nullable=False)     # Kundens namn ‚Äì obligatoriskt
    ssn = Column(Text, nullable=False, unique=True)  # Personnummer ‚Äì m√•ste vara unikt
    approved = Column(Boolean, nullable=False, default=False)  # Om kunden √§r godk√§nd (true/false), standard = false

# -------------------------------
# TABELL: accounts (bankkonton)
# -------------------------------
class Account(Base):
    __tablename__ = "accounts"

    id = Column(Integer, primary_key=True)  # Unik ID f√∂r kontot
    customer = Column(Integer, ForeignKey("customers.id"), nullable=False)  # Kundens ID ‚Äì koppling till customers-tabellen
    bank = Column(Integer, ForeignKey("banks.id"), nullable=False)  # Bankens ID ‚Äì koppling till banks-tabellen
    type = Column(Text, nullable=False)  # Kontotyp (ex. "spar", "l√∂nekonto") ‚Äì f√•r inte vara tomt
    nr = Column(Text, nullable=False, unique=True)  # Kontonummer ‚Äì m√•ste vara unikt
    credit = Column(Integer, nullable=False, default=0)  # Kreditgr√§ns eller saldo ‚Äì standard √§r 0

# -------------------------------
# TABELL: transactions (transaktioner)
# -------------------------------
class Transaction(Base):
    __tablename__ = "transactions"

    id = Column(Integer, primary_key=True)  # Unik ID f√∂r transaktionen
    amount = Column(Integer, nullable=False, default=0)  # Belopp f√∂r transaktionen ‚Äì m√•ste anges
    account_nr = Column(Text, nullable=False)  # Vilket konto transaktionen g√§ller (kontonummer, ej ID)
    transaction_time = Column(TIMESTAMP, nullable=False)
  # Tidpunkt d√• transaktionen skapades

#üìò Tips
#nullable=False betyder att f√§ltet √§r obligatoriskt
#unique=True betyder att v√§rdet m√•ste vara unikt
#ForeignKey(...) skapar relationer mellan tabeller (t.ex. varje konto tillh√∂r en kund)
